{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","LyricsField","props","inputStyle","width","border","fontWeight","focused","inputField","useRef","current","scrollIntoView","className","style","flexDirection","ref","onClick","e","preventDefault","setTime","time","t","seconds","minutes","toString","convertTime","type","value","text","onChange","editLyrics","target","ReadField","TimeStampList","contents","title","useState","newTime","setNewTime","add","isEdit","Object","keys","lyrics","map","check","fontSize","overflowY","height","justifyContent","addLyrics","App","editStatus","setEditStatus","musicFile","fileURL","setURL","musicStream","lyricsFile","setLyrics","time2","setTime2","isEditing","setEdit","searchText","setSearchText","playBackButtons","skipTime","currentTime","alert","alignItems","playbackRate","timestamp","lyrics2","includes","bufferLyrics","colorArray","highlightColor","setColor","highlights","setHighlights","highlightButton","Button","variant","color","bufferHighlights","range","window","getSelection","getRangeAt","newNode","document","createElement","setAttribute","surroundContents","push","linkName","setLinkName","download","setDownload","display","accept","files","name","URL","createObjectURL","component","reader","FileReader","onload","result","json","JSON","parse","readAsText","TextField","placeholder","src","controls","onTimeUpdate","i","bufferTime2","filename","stringify","file1","Blob","lyricsTimeStamp","noTimestamp","file2","noTimestampURL","file3","highlightsURL","exportLyrics","Link","href","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a388c63d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useState, useRef} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField'\nimport { Link } from '@material-ui/core';\nfunction LyricsField(props){\n  const inputStyle = {\n    width: '500px',\n    border: 0,\n    fontWeight: props.focused? \"bold\":\"normal\"\n  }\n \n  const convertTime=(t)=>{\n    let seconds = t%60;\n    let minutes = (t-seconds)/60;\n    if (seconds<10){\n      seconds='0'+seconds.toString();\n    }\n    return (`${minutes}:${seconds}`);\n  }\n  const inputField= useRef(null);\n\n  if (inputField.current && props.focused ){\n    inputField.current.scrollIntoView();\n  }\n  return(\n  <div  className=\"container\" style={{flexDirection:\"column\"}}>\n    <span \n    ref={inputField} \n    style={{fontWeight: props.focused?\"bold\":\"normal\"}}\n    onClick={(e)=>{\n      e.preventDefault(); \n      props.setTime(props.time);\n      }\n    }>\n    {convertTime(props.time)}\n    </span>\n    <input \n      type=\"text\"\n      value={props.text} \n      style={inputStyle}\n      onChange={(e)=>{\n          e.preventDefault();\n          props.editLyrics(e.target.value, props.time);\n            }\n          }\n    >\n    </input>\n\n  </div>)\n}\n\n\nfunction ReadField(props){\n  const inputField=useRef(null);\n  const convertTime=(t)=>{\n    let seconds = t%60;\n    let minutes = (t-seconds)/60;\n    if (seconds<10){\n      seconds='0'+seconds.toString();\n    }\n    return (`${minutes}:${seconds}`);\n  }\n  \n\n  if (inputField.current && props.focused ){\n    inputField.current.scrollIntoView();\n  }\n  return(\n    <div  className=\"container\" style={{fontWeight: props.focused?\"bold\":\"normal\", flexDirection:\"column\"}}>\n    <span \n    ref={inputField} \n    onClick={(e)=>{\n      e.preventDefault(); \n      props.setTime(props.time);\n      }\n    }>\n    {convertTime(props.time)}\n    </span>\n    <div>{props.text}</div>\n    </div>\n  )\n}\n\n\n\nfunction TimeStampList(props){\n  const [newTime, setNewTime] = useState(0);\n  const add = useRef(null);\n  \n  let contents;\n  let title;\n  if (props.isEdit){\n    title=\"Edit\";\n    contents=Object.keys(props.lyrics).map((t)=>\n      <LyricsField \n        text={props.lyrics[t]} \n        focused={t===props.check} \n        time={t} \n        editLyrics={props.editLyrics} \n        setTime={props.setTime}\n      />)\n  }\n  else {\n    title = \"Read and highlight\";\n    contents = Object.keys(props.lyrics).map((t)=>\n      <ReadField \n        text={props.lyrics[t]} \n        focused={t===props.check} \n        time={t}\n        setTime={props.setTime}\n      />)\n  }\n\n  return(\n  <div className=\"container\" style={{flexDirection:\"column\"}}>\n  <div style={{fontSize:20}}>{title}</div>\n  <div style={{border: \"1px solid black\", overflowY: \"scroll\", height:\"200px\", width:\"800px\", flexDirection:\"column\", justifyContent:\"flex-start\"}} className=\"container\">\n    {contents}\n  </div>\n  <br></br>\n  <div>\n  <input type=\"number\" value={newTime} ref={add} onChange={(e)=>{e.preventDefault(); setNewTime(e.target.value)}}></input>\n  <button onClick={(e)=>{e.preventDefault(); props.addLyrics(newTime); setNewTime(0)}}>Add timestamp</button>\n  </div>\n  </div>\n  )\n}\nfunction App() {\n \n  const [editStatus, setEditStatus]=useState(0);\n  const musicFile = useRef(null);\n\n  const [fileURL, setURL]=useState(null);\n\n  const musicStream = useRef(null);\n\n  const lyricsFile = useRef(null);\n\n  const [lyrics, setLyrics] = useState('');\n\n  const [time2, setTime2]=useState(0);\n\n  const [isEditing, setEdit] = useState(true);\n\n  const [searchText, setSearchText] = useState('');\n\n  const editLyrics=(text, time)=>{\n    let bufferLyrics=lyrics;\n    bufferLyrics[time]=text;\n    setLyrics(bufferLyrics);\n    if (editStatus===1){\n      setEditStatus(2);\n      return\n    }\n    setEditStatus(1);\n  }\n\n\n  const addLyrics=(t)=>{\n    let bufferLyrics=lyrics;\n    bufferLyrics[t]='lyrics';\n    setLyrics(bufferLyrics);\n    if (editStatus===1){\n      setEditStatus(2);\n      return\n    }\n    setEditStatus(1);\n  }\n  const fileSubmit = (e)=>{\n    e.preventDefault();\n    alert(`${musicFile.current.files[0].name}`);\n    setURL(URL.createObjectURL(musicFile.current.files[0]));\n  }\n\n  let playBackButtons = null;\n  if (musicStream.current){\n    playBackButtons=<div className='container' style={{flexDirection:\"column\", alignItems:\"center\"}}>\n      <div className='container'>\n        <button onClick={()=>{musicStream.current.playbackRate=0.5}}>0.5x</button>\n        <button onClick={()=>{musicStream.current.playbackRate=0.8}}>0.8x</button>\n        <button onClick={()=>{musicStream.current.playbackRate=1}}>1.0x</button>\n        <button onClick={()=>{musicStream.current.playbackRate=1.2}}>1.2x</button>\n        <button onClick={()=>{musicStream.current.playbackRate=2}}>2.0x</button>\n\n      </div>\n      <div className='container'><button onClick={()=>{skipTime(musicStream.current.currentTime+5)}}>Forward 5 seconds</button>\n      <button onClick={()=>{skipTime(musicStream.current.currentTime-5)}}>Go back 5 seconds</button></div>\n    </div>\n  }\n\n\n  const lyricsSubmit = (e)=>{\n    e.preventDefault();\n    let reader= new FileReader();\n    reader.onload = function(e){\n      let text = reader.result;\n      alert(text);\n      const json = JSON.parse(text)\n      setLyrics(json);\n\n    }\n    reader.readAsText(lyricsFile.current.files[0]);\n  }\n  \n  const getTime=(e)=>{\n    e.preventDefault();\n    if (!lyrics || !musicStream){\n      return\n    }\n    let i=0;\n    let bufferTime2=0;\n    while (musicStream.current.currentTime>=Object.keys(lyrics)[i]){\n      bufferTime2=Object.keys(lyrics)[i];\n      i=i+1;\n    }\n    setTime2(bufferTime2);\n  }\n  \n  function skipTime(t){\n    if (!fileURL) {alert(\"no file\"); return}\n    musicStream.current.currentTime=t;\n  }\n    \n  let timestamp=<div className=\"container\" style={{border: \"1px solid black\", overflowY: \"scroll\", height:\"200px\", width:\"800px\"}}></div>;\n  if (fileURL && lyrics){\n    let lyrics2={};\n    if (searchText){\n      for (let t in lyrics){\n        if (lyrics[t].toString().includes(searchText)){\n          lyrics2[t]=lyrics[t]\n        }\n      }\n    }\n    else {\n      lyrics2=lyrics;\n    }  \n    timestamp=<TimeStampList isEdit={isEditing} check={time2} lyrics={lyrics2} setTime={skipTime} editLyrics={editLyrics} addLyrics={addLyrics}/>\n    }\n  \n  \n  \n  \n  const editMode=()=>{\n    setEdit(!isEditing);\n    setHighlights([]);\n  }\n  const colorArray=[\"red\", \"blue\", \"green\", \"yellow\", \"green\"];\n  const [highlightColor, setColor] = useState(0);\n  const [highlights, setHighlights] = useState([]);\n\n  const highlightText = (e)=>{\n    e.preventDefault();\n    let bufferHighlights = highlights;\n    let range = window.getSelection().getRangeAt(0);\n    let newNode = document.createElement(\"span\");\n    let color = highlightColor%5;\n    newNode.setAttribute(\"style\", `background-color: ${colorArray[color]}`);\n    setColor(highlightColor+1);\n    range.surroundContents(newNode);\n\n    bufferHighlights.push(range.toString()+\"\\n\");\n    setHighlights(bufferHighlights);\n  }\n\n\n  let highlightButton=null;\n  if (!isEditing){\n    highlightButton=<Button variant=\"contained\" color=\"secondary\" onClick={highlightText}>Highlight selected text</Button>\n\n  }\n\n  const [linkName, setLinkName] = useState('lyrics.txt');\n  const [download, setDownload]= useState([]);\n  const exportLyrics=(filename)=>{\n    let text = [JSON.stringify(lyrics)];\n    const file1 = new Blob(text);\n    const lyricsTimeStamp = URL.createObjectURL(file1);\n\n    let noTimestamp=[];\n    for (let t in lyrics){\n      noTimestamp.push(lyrics[t]+\"\\n\")\n    }\n    const file2 = new Blob(noTimestamp)\n    const noTimestampURL = URL.createObjectURL(file2);\n\n    const file3 = new Blob(highlights);\n    const highlightsURL = URL.createObjectURL(file3)\n\n    alert (\"Lyrics and highlight saved as \"+filename);\n    setDownload([filename, lyricsTimeStamp, noTimestampURL, highlightsURL]);\n\n  }\n\n\n  return(<div className=\"container\" style={{flexDirection:\"column\", alignItems:\"center\"}}>\n    <div className=\"container\"  style={{flexDirection:\"column\", justifyContent:\"flex-start\", width:\"800px\"}}>\n      <div>\n      <div>\n        <label><input style={{display:\"none\"}} type=\"file\" accept=\"audio/*\" ref={musicFile} onChange={fileSubmit}></input>\n        <Button variant=\"raised\"  component=\"span\">Load music</Button>\n        </label>\n      </div>\n      <div>\n        <label><input style={{display:\"none\"}} type=\"file\" accept=\"text/*\" ref={lyricsFile} onChange={lyricsSubmit}></input>\n        <Button variant=\"raised\" component=\"span\">Load lyrics</Button>\n        </label>\n      </div>\n      </div>\n      <div><Button variant=\"contained\" color=\"secondary\" onClick={editMode}>Edit/Highlight</Button>\n      {highlightButton}\n      </div>\n      <TextField variant=\"outlined\" placeholder=\"search\" value={searchText} onChange={(e)=>{e.preventDefault(); setSearchText(e.target.value)}}></TextField>\n    </div>\n\n    <div className='container'>{timestamp}</div>\n    <div className=\"container\"><audio src={fileURL} controls ref={musicStream} onTimeUpdate={getTime} style={{\"width\":\"800px\"}}></audio></div>\n    {playBackButtons}\n    <div>\n    <Button variant =\"contained\" color=\"default\" onClick={(e)=>{e.preventDefault(); exportLyrics(linkName)}}>Save and export lyrics/highlights as (.txt, .doc or .rtf)</Button>:\n    <TextField value={linkName} onChange={(e)=>setLinkName(e.target.value)}></TextField>\n    </div>\n    <div className='container' style={{flexDirection:'column', alignItems:\"center\"}}>\n    <Link href={download[1]} download={download[0]}>Export lyrics to be reused</Link>\n    <Link href={download[2]} download={download[0]}>Export lyrics without timestamp</Link>\n    <Link href={download[3]} download={download[0]}>Export highlights only</Link>\n    </div>\n\n\n\n  </div> \n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}